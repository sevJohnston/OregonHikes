// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OregonHikes.Repositories;

namespace OregonHikes.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191202043654_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OregonHikes.Models.Hike", b =>
                {
                    b.Property<int>("HikeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int?>("HikeID1");

                    b.Property<string>("Region");

                    b.Property<string>("TrailName");

                    b.HasKey("HikeID");

                    b.HasIndex("HikeID1");

                    b.ToTable("Hikes");
                });

            modelBuilder.Entity("OregonHikes.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Link");

                    b.Property<string>("PeopleName");

                    b.Property<int?>("PersonID1");

                    b.HasKey("PersonID");

                    b.HasIndex("PersonID1");

                    b.ToTable("People");
                });

            modelBuilder.Entity("OregonHikes.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("UserName");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OregonHikes.Models.UserReview", b =>
                {
                    b.Property<int>("UserReviewID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HikeID");

                    b.Property<string>("Review")
                        .IsRequired();

                    b.Property<int>("UserNameUserID");

                    b.HasKey("UserReviewID");

                    b.HasIndex("HikeID");

                    b.HasIndex("UserNameUserID");

                    b.ToTable("UserReviews");
                });

            modelBuilder.Entity("OregonHikes.Models.Hike", b =>
                {
                    b.HasOne("OregonHikes.Models.Hike")
                        .WithMany("Hikes")
                        .HasForeignKey("HikeID1");
                });

            modelBuilder.Entity("OregonHikes.Models.Person", b =>
                {
                    b.HasOne("OregonHikes.Models.Person")
                        .WithMany("People")
                        .HasForeignKey("PersonID1");
                });

            modelBuilder.Entity("OregonHikes.Models.UserReview", b =>
                {
                    b.HasOne("OregonHikes.Models.Hike")
                        .WithMany("UserReviews")
                        .HasForeignKey("HikeID");

                    b.HasOne("OregonHikes.Models.User", "UserName")
                        .WithMany("Reviews")
                        .HasForeignKey("UserNameUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
